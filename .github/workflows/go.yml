name: Go CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: run jsc
      working-directory: dbmongo/js/test
      run: |
        sudo apt-get update
        # sudo apt-get install libjavascriptcoregtk-3.0-bin
        # sudo apt-get install libjavascriptcoregtk-4.0-bin
        sudo apt-get install libjavascriptcoregtk-4.0-bin_2.20.1-1_amd64
        echo "jsc"
        jsc ../compact/currentState.js ../compact/reduce.js ./testing.js ./compact/test_reduce.js
        echo "jsc2"
        jsc ../compact/currentState.js ../compact/finalize.js ../compact/complete_reporder.js ./testing.js ./compact/test_finalize.js
        echo "./test_compact.sh"
        chmod +x ./test_compact.sh
        ./test_compact.sh

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Generate jsFunctions.go
      working-directory: dbmongo/lib/engine
      run: |
        go generate -x
        DEST=$(go env GOPATH)/src/github.com/signaux-faibles/opensignauxfaibles/dbmongo/lib/engine
        echo "Copying the generated jsFunctions.go to ${DEST}, so go build can find it..."
        cp jsFunctions.go ${DEST}/

    - name: Build
      working-directory: dbmongo
      run: go build -v .

    - name: Test dbmongo
      working-directory: dbmongo
      run: go test -v

    - name: Test engine
      working-directory: dbmongo/lib/engine
      run: go test -v

      # TODO: run all tests, with $ go test -v ./...
