{
    "components": {
        "schemas": {
            "AdminBatch": {
                "items": {
                    "properties": {
                        "id": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        },
                        "files": {
                            "properties": {
                                "type1": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type2": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "...": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "readonly": {
                            "type": "boolean"
                        },
                        "complete_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "param": {
                            "type": "object",
                            "properties": {
                                "param1": {
                                    "type": "string"
                                },
                                "param2": {
                                    "type": "string"
                                },
                                "...": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "type": "array"
            },
            "Compact": {
                "properties": {
                    "fromBatchKey": {
                        "type": "string"
                    }
                }
            },
            "Public": {
                "properties": {
                    "batch": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "Event": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "event": {
                        "type": "object"
                    },
                    "priority": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FileSummary": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            },
            "Type": {
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Import": {
                "properties": {
                    "batch": {
                        "type": "string"
                    },
                    "noFilter": {
                        "type": "boolean",
                        "description": "Permet de poursuivre l'importation même si aucun filtre n'est fourni"
                    },
                    "parsers": {
                        "type": "string"
                    }
                }
            },
            "Check": {
                "properties": {
                    "batch": {
                        "type": "string"
                    },
                    "parsers": {
                        "type": "string"
                    }
                }
            },
            "Reduce": {
                "properties": {
                    "batch": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "features": {
                        "type": "string"
                    }
                }
            },
            "Validate": {
                "properties": {
                    "collection": {
                        "type": "string",
                        "description": "RawData ou ImportedData"
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "info": {
        "contact": {
            "name": "contact support",
            "email": "contact@signaux-faibles.beta.gouv.fr"
        },
        "description": "Cette API centralise toutes les fonctionnalités du module de traitement de données [openSignauxFaibles](https://github.com/signaux-faibles/opensignauxfaibles)  \nCe [projet](https://beta.gouv.fr/startups/signaux-faibles.html) fournit une plateforme technique à l'exploitation des signaux faibles pour anticiper les difficultés des entreprises  \n\nLa plateforme fournit les services suivants    \n- Gestion des batches d'intégration  \n- Lancement/ordonnancement des traitements  \n- Export et consultation des données  \n\nToutes les erreurs rencontrées lors du traitement seront signalées par le statut `HTTP 500` assorti du message d'erreur ayant provoqué le défaut du traitement.  \nPar ailleurs, tous les services authentifiés sont succeptibles de renvoyer le statut `HTTP 401` dans le cas où l'authentification est erronée.  Le code `HTTP 403` est également communiqué lorsque les attributions sont insuffisantes pour traiter la requête.  \nDans le cas où une requête est malformée, le code `HTTP 400` sera renvoyé assorti d'un message indiquant l'erreur rencontrée dans l'analyse du corps de la requête",
        "license": {
            "name": "Licence MIT",
            "url": "https://raw.githubusercontent.com/signaux-faibles/opensignauxfaibles/master/LICENSE"
        },
        "title": "API openSignauxFaibles",
        "version": "1.1"
    },
    "paths": {
        "/api/admin/batch": {
            "get": {
                "description": "Retourne tous les objets de type AdminBatch de la collection Admin trié par ordre de clé de batch.",
                "responses": {
                    "200": {
                        "description": "liste des batches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminBatch"
                                },
                                "example": [
                                    {
                                        "id": {
                                            "key": 1805,
                                            "type": "batch"
                                        },
                                        "files": {
                                            "altares": [
                                                "/files/1805/altares.csv"
                                            ],
                                            "cotisation": [
                                                "/files/1805/cotisation.csv"
                                            ]
                                        },
                                        "complete_types": [
                                            "altares"
                                        ],
                                        "params": {
                                            "date_debut": "2014-01-01 00:00:00",
                                            "date_fin": "2018-05-01 00:00:00"
                                        }
                                    },
                                    {
                                        "id": {
                                            "key": 1806,
                                            "type": "batch"
                                        },
                                        "files": {
                                            "altares": [
                                                "/files/1806/altares.csv"
                                            ],
                                            "cotisation": [
                                                "/files/1806/cotisation.csv"
                                            ]
                                        },
                                        "complete_types": [
                                            "altares",
                                            "cotisation"
                                        ],
                                        "params": {
                                            "date_debut": "2014-01-01 00:00:00",
                                            "date_fin": "2018-06-01 00:00:00"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "obtenir les objets AdminBatch",
                "tags": [
                    "Administration"
                ]
            },
            "post": {
                "summary": "mettre à jour un objet AdminBatch",
                "description": "Permet d'envoyer un objet AdminBatch pour création ou mise à jour. Le champ `id` de l'objet est la clé permettant d'identifier ces objets, l'update sera décidé sur cette base. Les modifications de l'objet sont acceptées sur la base du schéma de l'objet, toute clé sortant de ce schéma sera exclue, l'analyse de l'objet transmis se faisant au mieux-disant.",
                "requestBody": {
                    "description": "Prend un objet AdminBatch en entrée",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminBatch"
                            },
                            "example": {
                                "id": {
                                    "key": 1805,
                                    "type": "batch"
                                },
                                "files": {
                                    "altares": [
                                        "/files/1805/altares.csv"
                                    ],
                                    "cotisation": [
                                        "/files/1805/cotisation.csv"
                                    ]
                                },
                                "complete_types": [
                                    "altares"
                                ],
                                "params": {
                                    "date_debut": "2014-01-01 00:00:00",
                                    "date_fin": "2018-05-01 00:00:00"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "liste des batches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminBatch"
                                },
                                "example": [
                                    {
                                        "id": {
                                            "key": 1805,
                                            "type": "batch"
                                        },
                                        "files": {
                                            "altares": [
                                                "/files/1805/altares.csv"
                                            ],
                                            "cotisation": [
                                                "/files/1805/cotisation.csv"
                                            ]
                                        },
                                        "complete_types": [
                                            "altares"
                                        ],
                                        "params": {
                                            "date_debut": "2014-01-01 00:00:00",
                                            "date_fin": "2018-05-01 00:00:00"
                                        }
                                    },
                                    {
                                        "id": {
                                            "key": 1806,
                                            "type": "batch"
                                        },
                                        "files": {
                                            "altares": [
                                                "/files/1806/altares.csv"
                                            ],
                                            "cotisation": [
                                                "/files/1806/cotisation.csv"
                                            ]
                                        },
                                        "complete_types": [
                                            "altares",
                                            "cotisation"
                                        ],
                                        "params": {
                                            "date_debut": "2014-01-01 00:00:00",
                                            "date_fin": "2018-06-01 00:00:00"
                                        }
                                    },
                                    {
                                        "id": {
                                            "key": 1807,
                                            "type": "batch"
                                        },
                                        "files": {
                                            "debit": [
                                                "/files/1807/debit.csv"
                                            ]
                                        },
                                        "complete_types": [
                                            "debit"
                                        ],
                                        "params": {
                                            "date_debut": "2014-01-01 00:00:00",
                                            "date_fin": "2018-07-01 00:00:00"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/admin/batch/next": {
            "get": {
                "description": "Clôture le dernier batch et crée la référence de batch suivante dans la collection admin  \nL'ordre des batches est alphanumérique, la numérotation est effectuée en mois année (YYMM)\nPar exemple, le batch suivant 1812 est 1901.  \nIl est possible de créer des batches intermédiaires (par exemple 1812-correction), cela ne perturbe pas la création du batch 1901.  \nLe nouveau batch créé est vide, le service renvoie la liste des objets AdminBatch ainsi nouvellement constituée.  \nCette liste est également communiquée à tous les clients connectés via le connecteur webservice avec l'attribution admin (WIP).",
                "responses": {
                    "200": {
                        "description": "Traitement effectué avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminBatch"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "créer le batch suivant",
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/admin/events": {
            "get": {
                "description": "Liste les 250 derniers évènements du journal",
                "parameters": [
                    {
                        "in": "query",
                        "name": "batchKey",
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "description": "Identifiant de batch d'importation, pour filtrer les résultats."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "consulter le journal d'évènements",
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/admin/files": {
            "get": {
                "description": "Les fichiers sources sont disposés dans le répertoire APP_DATA (voir config.toml), cette fonction permet de les lister avec quelques propriétés utiles (taille et âge)",
                "responses": {
                    "200": {
                        "description": "liste des fichiers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileSummary"
                                    }
                                },
                                "example": {
                                    "name": "/1802/altares.csv",
                                    "date": "2018-02-20 18:42:32",
                                    "size": 12523214
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "lister les fichiers disponibles",
                "tags": [
                    "Administration"
                ]
            },
            "post": {
                "description": "Réalise l'upload d'un fichier dans un batch/type  \nUne fois l'upload effectué, le fichier est automatiquement attaché au batch  \nL'upload est effectué via les formData",
                "responses": {
                    "200": {
                        "description": "fichier enregistré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "ok"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "ajouter un fichier dans un batch",
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/admin/types": {
            "get": {
                "description": "Liste des types connus de dbmongo  \nCes types correspondent aux types que l'on rencontre dans le sous-objet files d'un objet AdminBatch. Par ailleurs ces types sont également référencés pour le stockage dans les objets de la collection de données.",
                "responses": {
                    "200": {
                        "description": "liste des types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Type"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "lister les types",
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/admin/features": {
            "get": {
                "description": "Liste des traitements de production de variables connus de dbmongo  \nCes références sont à utiliser auprès du service `/data/reduce`",
                "responses": {
                    "200": {
                        "description": "liste des traitements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "lister les traitements de données",
                "tags": [
                    "Administration"
                ]
            }
        },
        "/api/data/compact": {
            "post": {
                "summary": "compacter la base de données",
                "description": "Ce traitement permet le compactage de la base de données.  \nCe compactage a pour effet de réduire tous les objets en clé uniques comportant dans la même arborescence toutes les données en rapport avec ces clés.  \nCe traitement est nécessaire pour rendre disponible les données à /api/data/reduce les nouvelles données importées.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compact"
                            },
                            "example": {
                                "fromBatchKey": 1802
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le traitement s'est bien déroulé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "ok"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/import": {
            "post": {
                "description": "Effectue l'import de tous les fichiers du batch donné en paramètre Pour exécuter tous les parsers, il faut ne pas spécifier la propriété parsers ou lui donner la valeur null.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Import"
                            },
                            "example": {
                                "batch": 1802,
                                "parsers": [
                                    "altares",
                                    "cotisation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le traitement s'est bien déroulé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "ok"
                            }
                        }
                    },
                    "404": {
                        "description": "Un des parsers demandé n'est pas reconnu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "justAnExampleParser n'est pas un parser reconnu"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "importer des fichiers",
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/check": {
            "post": {
                "description": "Vérifie la validité du batch sur le point d'être importé et des fichiers qui le constituent. Pour exécuter tous les parsers, il faut ne pas spécifier la propriété parsers ou lui donner la valeur null.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Check"
                            },
                            "example": {
                                "batch": 1802,
                                "parsers": [
                                    "altares",
                                    "cotisation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le batch est valide et les rapports de parsing stockés dans la collection Journal.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "reports": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "description": "rapports de parsing de chaque fichier mentionné dans le batch",
                                            "example": [
                                                "/../lib/urssaf/testData/debitCorrompuTestData.csv: intégration terminée, 5 lignes traitées, 2 erreures fatales, 0 rejets, 0 lignes filtrées, 3 lignes valides"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Le batch est inexistant ou un des parsers demandé n'est pas reconnu.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "justAnExampleParser n'est pas un parser reconnu"
                            }
                        }
                    }
                },
                "summary": "Vérifier la validité d'un batch avant son importation",
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/public": {
            "post": {
                "description": "Alimente la collection Public avec les objets calculés pour le batch cité en paramètre, à partir de la collection RawData.  \nLe traitement prend en paramètre la clé du batch (obligatoire) et un SIREN (optionnel). Lorsque le SIREN n'est pas précisé, tous les objets lié au batch sont traités, à conditions qu'ils soient dans le périmètre de scoring \"algo2\".\nCette collection sera ensuite accédée par les utilisateurs pour consulter les données des entreprises.  \nDes niveaux d'accéditation fins (ligne ou colonne) pour la consultation de ces données peuvent être mis en oeuvre.  \nCes filtrages sont effectués grace à la notion de scope. Les objets et les utilisateurs disposent d'un ensemble de tags et les objets partageant au moins un tag avec les utilisateurs peuvent être consultés par ceux-ci.  \nCes tags sont exploités pour traiter la notion de région (ligne) mais aussi les permissions (colonne).",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Public"
                            },
                            "example": {
                                "batch": "1805",
                                "key": "012345678"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le traitement s'est bien déroulé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "ok"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "publier les données",
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/reduce": {
            "post": {
                "description": "Alimente la collection Features en calculant les variables avec le traitement mapreduce demandé dans la propriété `features`  \nLe traitement remplace les objets similaires en sortie du calcul dans la collection Features, les objets non concernés par le traitement ne seront ainsi pas remplacés, de sorte que si un seul siret est demandé le calcul ne remplacera qu'un seul objet.  \nCes traitements ne prennent en compte que les objets déjà compactés.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reduce"
                            },
                            "example": {
                                "batch": "1805",
                                "features": "algo2",
                                "key": "012345678901234"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le traitement s'est bien déroulé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "ok"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "calculer les variables",
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/search": {
            "post": {
                "description": "Effectue une recherche fulltext sur la collection Public et retourne les 15 premiers objets correspondants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "rechercher une entreprise",
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/etablissements": {
            "get": {
                "description": "Exporte la liste des établissements depuis la collection Public vers un fichier compressé au format gzip contenant une ligne JSON par document.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "key",
                        "schema": {
                            "type": "integer"
                        },
                        "required": false,
                        "description": "Numéro SIREN à utiliser pour filtrer les résultats."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Les établissements ont été exportés dans le fichier fourni en réponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/entreprises": {
            "get": {
                "description": "Exporte la liste des entreprises depuis la collection Public vers un fichier compressé au format gzip contenant une ligne JSON par document.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "key",
                        "schema": {
                            "type": "integer"
                        },
                        "required": false,
                        "description": "Numéro SIREN à utiliser pour filtrer les résultats."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Les entreprises ont été exportés dans le fichier fourni en réponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Traitements"
                ]
            }
        },
        "/api/data/validate": {
            "post": {
                "description": "Vérifie la validité des entrées de données contenues dans les documents de la collection RawData ou ImportedData.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Validate"
                            },
                            "example": {
                                "collection": "RawData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les entrées invalides ont été exportées dans le fichier fourni en réponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Traitements"
                ]
            }
        }
    },
    "openapi": "3.0.0"
}
