$ ./sfdata 
Commande non reconnue. Utilisez ./sfdata --help pour lister les commandes.
---
$ ./sfdata unknown_command
unexpected non-flag value: [sfdata] unknown_command
---
$ ./sfdata --help
Usage: sfdata [FLAG|COMMAND]...

Flags:
    -h, --help    show help    (type: bool)

Commands:
    parseFile    Parse un fichier vers la sortie standard
    check        Vérifie la validité d'un batch avant son importation
    import       Importe des fichiers de données
---
$ ./sfdata check --help
Vérifie la validité d'un batch avant son importation

Usage: check [FLAG]...

Description:
    Vérifie la validité du batch sur le point d'être importé et des fichiers qui le constituent.
    Il est possible de limiter l'exécution à certains parsers en spécifiant la liste dans le flag "--parsers".
    Répond avec un propriété JSON "reports" qui contient les rapports textuels de parsing de chaque fichier.

Flags:
    --batch batch_key        (type: string)
                         Identifiant du batch à vérifier (ex: 1802, pour Février 2018)
    --parsers                (type: []string)
                         Parseurs à employer (ex: altares,cotisation)
---
$ ./sfdata import --help
Importe des fichiers de données

Usage: import [FLAG]...

Description:
    Effectue l'import de tous les fichiers du batch donné en paramètre.
    Il est possible de limiter l'exécution à certains parsers en spécifiant la liste dans le flag "--parsers".
    Répond "ok" dans la sortie standard, si le traitement s'est bien déroulé.

Flags:
    --batch batch_key        (type: string)
                         Identifiant du batch à importer (ex: 1802, pour Février 2018)
    --parsers                (type: []string)
                         Parseurs à employer (ex: altares,cotisation)
    --no-filter              (type: bool)
                         Pour procéder à l'importation même si aucun filtre n'est fourni
---
$ ./sfdata parseFile --help
Parse un fichier vers la sortie standard

Usage: parseFile [FLAG]...

Flags:
    --parser        (type: string)
                Parseur à employer (ex: cotisation)
    --file          (type: string)
                Nom du fichier à parser. Contrairement à l'import, le chemin du fichier doit être complet et ne tient pas compte de la variable d'environnement APP_DATA
---
